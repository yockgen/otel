syntax = "proto3";

package infrastructure.edge.iaas.platform.telemetrymgr;

option go_package = "github.com/intel-innersource/infrastructure.edge.iaas.platform/internal/telemetrymgr/pb";

// Northbound service interface to Telemetry Manager
service TelemetryManagerNB {
	// List all collections config
    rpc ListCollections(ListCollectionsRequest) returns (ListCollectionsResponse) {}    
    // Get a single collection config
    rpc GetCollection(GetCollectionRequest) returns (GetCollectionResponse) {}
	// update single collection config
    rpc SetCollection(SetCollectionRequest) returns (GetCollectionDataResponse) {}
    // update single collection config
    rpc SetCollections(SetCollectionsRequest) returns (GetCollectionDataResponse) {}
    // Get a single collection data
    rpc GetCollectionData(GetCollectionRequest) returns (GetCollectionDataResponse) {}
    
    // List all sources
    rpc ListSources(ListSourcesRequest) returns (ListSourcesResponse) {}    
    // Get a source
    rpc GetSource(GetSourceRequest) returns (GetSourceResponse) {}
}

// Messages for GetCollection
message GetCollectionRequest {
    string id = 1;
}

// Messages for SetCollection
message SetCollectionRequest {
    string id = 1;
    string name = 2;
    int64 interval = 3; // unit: ns
    int64 latency = 4;  // unit: ns
    repeated GetMetricResponse metric = 5;
	repeated GetHostResponse host = 6;
}

// Messages for SetCollections
message SetCollectionsRequest {
    repeated SetCollectionRequest collection = 1;   
}

// Represents a target metric 
message GetMetricResponse {
      string measurement = 1;    
}

// Represents a target host
message GetHostResponse {
    string host = 1;    
}

// Represents a metric result
message GetMetricResultResponse {
    string measurement = 1;
    string host = 2;
    double value = 3;
    string start = 4;
    string stop = 5;
        
}

message GetCollectionResponse {
	
    string id = 1;
    string name = 2;
    int64 interval = 3; // unit: ns
    int64 latency = 4;  // unit: ns
    repeated GetMetricResponse metric = 5;
	repeated GetHostResponse host = 6;
	repeated GetMetricResultResponse result = 7; //for sprint 7 and 8 demo, to be remove once getcollectiondata function complete
}

message GetCollectionDataResponse {
	
    oneof config {
        GetCollectionResponse collection_config = 1;    
    }
	repeated GetMetricResultResponse result = 7;
}

// Messages for ListCollections
message ListCollectionsRequest {
	// TODO: filters, pagination
}
message ListCollectionsResponse {
	message Collection {
	    string id = 1;
	    string name = 2;
	    int64 interval = 3; // unit: ns
	    int64 latency = 4;  // unit: ns
		repeated GetMetricResponse metric = 5;
		repeated GetHostResponse host = 6;
	}
    repeated Collection collections = 1;
}

// Messages for ListSources
message ListSourcesRequest {
	// TODO: filters, pagination
}

// Messages for ListSources
message ListSourcesResponse {
	// TODO: placeholder, will added detail fields
}

// Messages for GetSource
message GetSourceRequest {
    string id = 1;
}

// Messages for GetSourceResponse
message GetSourceResponse {
    // TODO: placeholder, will added detail fields
}
